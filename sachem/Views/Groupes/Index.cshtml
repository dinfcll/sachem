@model PagedList.IPagedList<sachem.Models.Groupe>

@{
    ViewBag.Title = "Groupes";
}

<h2>Groupes</h2>

@Html.ValidationSummary(true, "", new { @class = "text-danger" })

@using (Html.BeginForm("Index", "Groupes", FormMethod.Post, new { @class = "form-inline", role = "form" }))
{

    @TempData["Success"]

    if ((string)TempData["Questions"] != null)
    {
        @TempData["Questions"]
        <br />

            <tr>
                <td>
                    @Html.ActionLink("Oui", "AjouterEleve", new { idg = @TempData["idg"] ,page = ViewBag.page}) |
                    @Html.ActionLink("Non", "Index", new { idg = @TempData["idg"]}) 
                </td>
            </tr>

    }

    <p>
        <h4>Recherche</h4>
    </p>
    <div class="form-group">
        <p>
            <div class="form-group">
                Session :
                @Html.DropDownList("Sessions", "Toutes")
            </div>
            
            <div class="form-group">
                Enseignant :
                @{
                    string s = "Toutes";
                    if (sachem.Models.SachemIdentite.ObtenirTypeUsager(Session) == sachem.Models.TypeUsagers.Enseignant)
                    {
                        s = null;
                    }
                }
                @Html.DropDownList("Enseignants", s)
            </div>
            
            <div class="form-group">
                Cours :
                @Html.DropDownList("Cours", "Toutes")
            </div>


            <div class="form-group">
                <input type="submit" value="Rechercher" class="btn-toolbar" />
            </div>
        </p>
    </div>
}

<p>
    @Html.ActionLink("Ajouter un groupe", "Create")
</p>
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().Session.NomSession)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().Cours.CodeNom)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().NoGroupe)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().Personne.NomPrenom)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().nbPersonne)
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.Session.NomSession)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Cours.CodeNom)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.NoGroupe)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Personne.NomPrenom)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.nbPersonne)
        </td>
        <td>
            @Html.ActionLink("Modifier", "Edit", new {id = item.id_Groupe}) |
            @Html.ActionLink("Supprimer", "Delete", new {id = item.id_Groupe})
        </td>
    </tr>
}
@if (!Model.Any())
{
    <tr>
        <td colspan="6">Aucun groupe ne répond à ces critères</td>
    </tr>
}
</table>

@Html.Partial("_PageRecherche", Model)
