@using sachem.Models
@model List<Inscription>

@{
    ViewBag.Title = Messages.DetailsInscription;
}

<h2>@ViewBag.Title</h2>
<p class="text-success">
    @TempData["Success"]
</p>
<p class="text-danger">
    @TempData["Erreur"]
</p>
<div>
    <h4>@Messages.IdentificationEtudiant</h4>
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.First().Personne.Matricule7)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.First().Personne.Matricule7)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.First().Personne.NomPrenom)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.First().Personne.NomPrenom)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.First().Personne.DateNais)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.First().Personne.DateNais)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.First().Personne.Courriel)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.First().Personne.Courriel)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.First().Personne.Telephone)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.First().Personne.Telephone)
        </dd>
    </dl>
</div>

    <h4>@Messages.Inscription</h4>
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.First().id_TypeInscription)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.First().p_TypeInscription.TypeInscription)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.First().id_Statut)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.First().p_StatutInscription.Statut)
        </dd>
    </dl>
    
@using (Html.BeginForm("ChangerStatutInscription", "RechercheInscription", new { @class = "form-inline", role = "form" }))
{
    @Html.HttpMethodOverride(HttpVerbs.Put)
    <div class="form-actions no-color">
        @Html.HiddenFor(m => m.First().id_Inscription)
        <span>@Messages.Decision</span>  @Html.DropDownListFor(model => model.First().id_Statut, ViewBag.Liste_Statut as SelectList, new { @class = "form-control" }) <input type="submit" value="@Messages.Enregistrer" class="btn btn-default" />
        @Html.ActionLink(Messages.Consulter, "Details", "Jumelage", new { id = Model.First().id_Inscription},null) <br /> <br />
    </div>
}
<table class="table">
    @if (Model.Any())
    {
        <tr>
            <th class="col-sm-7">
                @Html.DisplayNameFor(model => model.First().DateInscription)
            </th>
            <th class="col-sm-2">
                @Html.DisplayNameFor(model => model.First().id_TypeInscription)
            </th>
            <th class="col-sm-1">
                @Html.DisplayNameFor(model => model.First().id_Statut)
            </th>
            <th class="col-sm-2"></th>
        </tr>

        foreach (var item in Model.Skip(1))
         {
             <tr>
                 <td>
                     @Html.DisplayFor(modelItem => item.DateInscription)
                 </td>
                 <td>
                     @Html.DisplayFor(modelItem => item.p_TypeInscription.TypeInscription)
                 </td>
                 <td>
                     @Html.DisplayFor(modelItem => item.p_StatutInscription.Statut)
                 </td>
             </tr>
         }
    }
    else
    {
        <tr>
            <td colspan="6">@Messages.AucunInscription</td>
        </tr>
    }
</table>



<p>
    @Html.ActionLink(Messages.RetourEnArriere, "Index")
</p>

