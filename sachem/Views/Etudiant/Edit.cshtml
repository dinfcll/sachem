@using System.ComponentModel
@model sachem.Models.PersonneEtuProgParent

@{
    ViewBag.Title = "Modifier étudiant";
}

<h2>@ViewBag.Title</h2>



@using (Html.BeginForm())
{

    <p class="text-success">
        @Html.Raw(@TempData["Success"])
    </p>

    <p class="text-danger">
        @Html.Raw(@TempData["Echec"])
    </p>

    if ((string)TempData["Question"] != null)
    {
        @TempData["Question"]
        <br />

        <tr>
            <td>
                @Html.ActionLink("Oui", "deleteProgEtu", new { idProg = TempData["id_Prog"], idPers = TempData["id_Pers"], Valider = 1  }) |
                @Html.ActionLink("Non", "deleteProgEtu", new { idProg = TempData["id_Prog"], idPers = TempData["id_Pers"], Valider = 2 } )
            </td>
        </tr>
    }

    <div class="container">
        <!-- Modal -->
        <div class="modal fade" id="myModal" role="dialog">
            <div class="modal-dialog">

                <!-- Modal content-->
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal">&times;</button>
                        <h4 class="modal-title">Modal Header</h4>
                    </div>
                    <div class="modal-body">
                        <p>Some text in the modal.</p>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.Partial("_Etudiant")
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.personne.id_Pers)

        <div class="form-group">
            @Html.LabelFor(model => model.personne.Matricule, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.personne.Matricule7, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.personne.Matricule, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.personne.MP, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.PasswordFor(model => model.personne.MP, new { @class = "form-control", placeholder = "Mot de passe" ,@Value=""})
                @Html.ValidationMessageFor(model => model.personne.MP, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.personne.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.PasswordFor(model => model.personne.ConfirmPassword, new { @class = "form-control", placeholder = "Confirmation de mot de passe"})
                @Html.ValidationMessageFor(model => model.personne.ConfirmPassword, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.personne.Actif, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.personne.Actif)
                    @Html.ValidationMessageFor(model => model.personne.Actif, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="form-group">
            @Html.Label("Programme d'étude", htmlAttributes: new { @class = "control-label col-md-2" })
            <div style="margin-top:7px;">
                <div style="margin-left:210px;">
                    <table>
                        @foreach (var item in Model.epe)
                        {

                            <tr>
                                <td>@Html.DisplayFor(modelItem => item.ProgrammeEtude.CodeNomProgramme)</td>
                                <td><button type="button" class="btn btn-info btn-sm right" data-toggle="modal" data-target="#myModal">Open Modal</button></td>
                            </tr>
                                @*@Html.ActionLink(" Supprimer", "myModal", new { idProg = item.id_EtuProgEtude, idPers = item.Personne.id_Pers})*@
                        }
                        </table>
                    </div>
                </div>
        </div>
        <br><br />
        <h4>Ajouter un programme d'étude</h4>
        <hr>
        <div class="form-group">
            @Html.Label("Programme d'étude", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("id_Programme", null, "Choisir", htmlAttributes: new { @class = "form-control" })
                @*@Html.ValidationMessageFor(model => model.personne, "", new { @class = "text-danger" })*@
            </div>
        </div>
        <div class="form-group">
            @Html.Label("Session", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("id_Session", null, "Choisir", htmlAttributes: new { @class = "form-control" })
                @*@Html.ValidationMessageFor(model => model.personne.id_TypeUsag, "", new { @class = "text-danger" })*@
            </div>
        </div>
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Enregistrer" class="btn btn-default" />
        </div>
    </div>
}
<div>
    @Html.ActionLink("Retour à la recherche des étudiants", "Index")
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
