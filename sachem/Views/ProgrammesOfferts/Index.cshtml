﻿@model IEnumerable<sachem.Models.ProgrammeEtude>
@using PagedList
@using PagedList.Mvc;
@using System.Linq
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = "Programmes d'étude";
    var pagedlist = (IPagedList)Model;
}

<h2>@ViewBag.Title</h2>
@Html.ValidationSummary(true, "", new { @class = "text-danger" })
<p class="text-success">
    @Html.ViewBag.Success
    @TempData["Success"]
</p>
<p>
    @using (Html.BeginForm("Index", "ProgrammesOfferts", FormMethod.Post, new { @class = "form-inline", role = "form" }))
    {
        <table class="table-condensed">
            <tr>
                <td>Code ou nom de programme</td>
                <td>@Html.Editor("Recherche", new { htmlAttributes = new { @class = "form-control" } })</td>
                <td><input type="submit" value="Rechercher" class="form-search" /></td>
            </tr>
        </table>
    }
</p>
    @Html.ActionLink("Ajouter un programme d'étude", "Create")
    
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Code)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Annee)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.NomProg)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Actif)
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Code)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Annee)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.NomProg)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Actif)
            </td>
            <td>
                @Html.ActionLink("Modifier", "Edit", new { id = item.id_ProgEtu }) |
                @Html.ActionLink("Supprimer", "Delete", new { id = item.id_ProgEtu })
            </td>
        </tr>
    }

    @if (!Model.Any())
    {
        <tr>
            <td colspan="6">Aucun programme d'étude ne répond à ces critères</td>
        </tr>
    }
</table>

@if (pagedlist.PageCount > 0)
{
    <div>
        <div>
            Page @(pagedlist.PageCount < pagedlist.PageNumber ? 0 : pagedlist.PageNumber) sur @pagedlist.PageCount
        </div>
        @Html.PagedListPager(pagedlist, page => Url.Action("Index", "ProgrammesOfferts", new {recherche = ViewBag.Recherche, page = page}))
    </div>
}
    @Html.ActionLink("Retourner à la recherche des programmes d'étude", "Index")