@model sachem.Models.Inscription

@{
    ViewBag.Title = "Jumelage";
}

<h2>@ViewBag.Title</h2>
<p class="text-success">
    @ViewBag.Succes
</p>
<p class="text-danger">
    @ViewBag.Erreur
</p>
<div>
    <h4 class="page-header">Identification de l'étudiant</h4>
    <dl class="dl-horizontal col-sm-6" style="right:0;margin-top:0;position:absolute;">
        <dt>
            @Html.DisplayNameFor(model => model.p_TypeInscription.TypeInscription)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.p_TypeInscription.TypeInscription)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.p_StatutInscription.Statut)
        </dt>

        <dd>
            @{  String count;
                if (Model.p_TypeInscription.id_TypeInscription == 1)
                {
                    count = ((sachem.Controllers.JumelageController)this.ViewContext.Controller).RetourneNbreJumelageEtudiant(Model.Jumelage.Count());
                }
                else
                {
                    count = ((sachem.Controllers.JumelageController)this.ViewContext.Controller).RetourneNbreJumelageEtudiant(Model.Jumelage1.Count());
                }
            }
            @(count)
        </dd>
        @*<dt>Doit afficher d'autres resultats lorsque les autres features seront prets (ceux des questionnaires)</dt>
    <dt>
        @Html.Label("[WIP FORMULAIRE] Nombre d'heures que l'étudiant est prêt à faire par semaine ( 1 rencontre = 1h30)")
    </dt>

    <dd>
        @Html.Label("[WIP FORMULAIRE] Reponse - 3hrs")
    </dd>

    <dt>
        @Html.Label("[WIP FORMULAIRE] Etudiant est-il prêt à faire deux rencontres de suite")
    </dt>

    <dd>
        @Html.Label("[WIP FORMULAIRE] Reponse - Oui")
    </dd>*@
    </dl>
    <dl class="dl-horizontal col-sm-12">
        <dt>
            @Html.DisplayNameFor(model => model.Personne.Matricule7)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Personne.Matricule7)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Personne.NomPrenom)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Personne.NomPrenom)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Personne.DateNais)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Personne.DateNais)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Personne.Courriel)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Personne.Courriel)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Personne.Telephone)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Personne.Telephone)
        </dd>
    </dl>
    
    </div>

@using (Html.BeginForm("Details", "Jumelage", FormMethod.Post, new { @class = "form-inline", role = "form" }))
{
    <h4 class="page-header">Disponibilités</h4>
    @Html.Partial("_Disponibilites")
}

@*if futur sur: etudiant peut etre encore jumeler, afficher la zone de jumelage possible*@
@using (Html.BeginForm("Details", "Jumelage", FormMethod.Post, new { @class = "form-inline", role = "form" }))
{
    @Html.Partial("_JumelagesPossibles")
}
@*else*@
@using (Html.BeginForm("Details", "Jumelage", FormMethod.Post, new { @class = "form-inline", role = "form" }))
{
    @Html.Partial("_JumelagesAvec")
}
