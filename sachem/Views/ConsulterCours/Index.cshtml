@using System.Diagnostics.Eventing.Reader
@using Microsoft.Ajax.Utilities
@using sachem.Models
@model IEnumerable<sachem.Models.Groupe>

@{
    ViewBag.Title = "Consulter cours";
}

<h2>Consulter cours</h2>
    
@using (Html.BeginForm("Index", "ConsulterCours", FormMethod.Post, new {@class = "form-inline", role = "form"}))
{
    <p>
        <h4>Recherche</h4>
    </p>

    <div class="form-group">
        <p>
            <div class="form-group">
                Session :
                @Html.DropDownList("Session", "Toutes")
            </div>
            @if (!ViewBag.IsEnseignant)
            {
                <div class="form-group">
                    Enseignant :
                    @Html.DropDownList("Personne", "Tous")
                </div>
            }
            
            <div class="form-group">
                <input type="submit" value="Rechercher" class="btn-toolbar"/>
            </div>
        </p>
    </div>
}

<table class="table">
    
    @if (ViewBag.IsEnseignant) //si enseignant
    {
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Cours.Code)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Cours.Nom)
            </th>
            <th></th>
        </tr>

        foreach (var item in Model)
        {
             <tr>
                 <td>
                     @Html.DisplayFor(modelItem => item.Cours.Code)
                 </td>
                 <td>
                     @Html.DisplayFor(modelItem => item.Cours.Nom)
                 </td>
                 <td>
                     @Html.ActionLink("Consulter", "Details", new {id = item.id_Cours})
                 </td>
             </tr>
        }
    }
    else //si responsable
    {
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Cours.Code)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Cours.Nom)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Cours.Actif)
            </th>
            <th>
                Enseignant
            </th>
            <th></th>
        </tr>

        string codeCoursCourant = "";
        string codeCoursSuivant = "";
        string affichageNomPrenom ="";
        string prenomNomCol = "";
        int i = 0;
        List<string> t_PrenomNom = new List<string>();

        foreach (var item in Model)
        {
            codeCoursCourant = Model.ElementAt(i).Cours.Code; //code du cours courant

            if (i < Model.Count()-1)
            {
                codeCoursSuivant = Model.ElementAt(i + 1).Cours.Code; //code du cours suivant
            }
            else
            {
                codeCoursSuivant = "";
            }


            if (codeCoursCourant.Equals(codeCoursSuivant)) //s'il y a des cours répétés
            {
                if (!t_PrenomNom.Contains(item.Personne.PrenomNom))
                {
                    prenomNomCol += item.Personne.PrenomNom + ", ";

                    affichageNomPrenom = prenomNomCol;

                    t_PrenomNom.Add(item.Personne.PrenomNom);
                }

            }
            else //si dernier cours
            {

                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Cours.Code)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Cours.Nom)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Cours.Actif)
                    </td>
                    <td>
                        @affichageNomPrenom
                    </td>
                    <td>
                        @Html.ActionLink("Consulter", "Details", new { id = item.id_Cours })
                    </td>
                </tr>
                prenomNomCol = "";
            }

            i++;
        }
    }

</table>