@using sachem.Methodes_Communes
@using sachem.Models
@model Tuple<Inscription, IEnumerable<CoursSuivi>, IEnumerable<Inscription>>

<div>
    @if (BrowserSessionBag.Current.id_Pers == Model.Item1.id_Pers)
    {
        <div>
            <a class="btn btn-default" style = "margin-bottom:10px;margin-top:-10px;float:right;" href="@Url.Action("Create", "CourSuivi", new {id = BrowserSessionBag.Current.id_Pers})"><i class="material-icons">add</i>@Messages.DossierEtudiantAjouterCoursAnterieur</a>
        </div>
    }
    <h4 class="page-header">@Messages.DossierEtudiantCoursAnterieur</h4>

    <table class="table">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Item2.First().Cours.CodeNom)
            </th>
            @if (SachemIdentite.ObtenirTypeUsager(Session) == TypeUsager.Etudiant && SachemIdentite.ObtenirTypeInscription(Session) == TypeInscription.EleveAide)
            {
                <th class="col-sm-2">
                    @Html.DisplayNameFor(model => model.Item2.First().Session.NomSession)
                </th>
            }
            @if (SachemIdentite.ObtenirTypeUsager(Session) == TypeUsager.Etudiant && (int) SachemIdentite.ObtenirTypeInscription(Session) > (int) TypeInscription.EleveAide)
            {
                <th class="col-sm-3">
                    @Html.DisplayNameFor(model => model.Item2.First().p_College.College)
                </th>
            }
            <th class="col-sm-2">
                @Html.DisplayNameFor(model => model.Item2.First().resultat)
            </th>
            @if (SachemIdentite.ObtenirTypeUsager(Session) == TypeUsager.Etudiant && SachemIdentite.ObtenirTypeInscription(Session) == TypeInscription.EleveAide)
            {
                <th class="col-sm-1">
                    @Html.DisplayNameFor(model => model.Item2.First().p_StatutCours.Statut)
                </th>
            }
            <th class="col-sm-1">
            </th>
        </tr>

        @foreach (var item in Model.Item2)
        {
            <tr>
                <td>
                    @(string.IsNullOrEmpty(item.autre_Cours) ? Html.DisplayFor(modelItem => item.Cours.CodeNom) : Html.DisplayFor(modelItem => item.autre_Cours))
                </td>
                @if (SachemIdentite.ObtenirTypeUsager(Session) == TypeUsager.Etudiant && SachemIdentite.ObtenirTypeInscription(Session) == TypeInscription.EleveAide)
                {
                    <td>
                        @Html.DisplayFor(modelItem => item.Session.NomSession)
                    </td>
                }
                @if (SachemIdentite.ObtenirTypeUsager(Session) == TypeUsager.Etudiant && (int) SachemIdentite.ObtenirTypeInscription(Session) > (int) TypeInscription.EleveAide)
                {
                    <td>
                        @(string.IsNullOrEmpty(item.autre_College) ? Html.DisplayFor(modelItem => item.p_College.College) : Html.DisplayFor(modelItem => item.autre_College))
                    </td>
                }
                <td>
                    @Html.DisplayFor(modelItem => item.resultat)
                </td>
                @if (SachemIdentite.ObtenirTypeUsager(Session) == TypeUsager.Etudiant && SachemIdentite.ObtenirTypeInscription(Session) == TypeInscription.EleveAide)
                {
                    <td>
                        @Html.DisplayFor(modelItem => item.p_StatutCours.Statut)
                    </td>
                }
                <td class="text-center">
                    <a href="@Url.Action("Edit", "CoursSuivi",new { coursReussi = item.id_CoursReussi, personne = item.id_Pers })"><i class="material-icons">edit</i></a>
                    <a href="@Url.Action("Delete", "CoursSuivi",new { coursReussi = item.id_CoursReussi, personne = item.id_Pers })"><i class="material-icons">delete</i></a>
                </td>
            </tr>
        }
        @if (!Model.Item2.Any())
        {
            <tr>
                <td colspan="6">@Messages.AucunCoursSansRecherche</td>
            </tr>
        }
    </table>
</div>
