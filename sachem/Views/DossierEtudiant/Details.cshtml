@model Tuple<sachem.Models.Inscription, IEnumerable<sachem.Models.CoursSuivi>, IEnumerable<sachem.Models.Inscription>>

@{
    ViewBag.Title = "Dossier de l'étudiant";
}

<h2>@ViewBag.Title</h2>

<div id="succes" style="color:#468847;display:none;"></div>
@using (Html.BeginForm("Details", "DossierEtudiant", FormMethod.Post, new { @class = "form-inline", role = "form" }))
{
    @Html.AntiForgeryToken()
<div>
    <h4>Identification de l'étudiant</h4>
    <hr />
    <dl class="dl-horizontal">
        @Html.HiddenFor(model => model.Item1.Personne.id_Pers, new { id = "hidden-id-pers" })
        @Html.HiddenFor(model => model.Item1.id_Inscription, new { id = "hidden-id-insc" })
        <dt>
            @Html.DisplayNameFor(model => model.Item1.Personne.Matricule7)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Item1.Personne.Matricule7)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Item1.Personne.NomPrenom)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Item1.Personne.NomPrenom)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Item1.Personne.DateNais)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Item1.Personne.DateNais)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Item1.Personne.Courriel)
        </dt>

        <dd>
            @if (sachem.Models.SachemIdentite.ObtenirTypeUsager(Session) == sachem.Models.TypeUsagers.Tuteur
        || sachem.Models.SachemIdentite.ObtenirTypeUsager(Session) == sachem.Models.TypeUsagers.Eleve)
            {
                @Html.EditorFor(model => model.Item1.Personne.Courriel, new
           {
               htmlAttributes = new
               {
                   @class = "form-control",
                   required = "required",
                   id = "de-input-field-email",
                   maxlength = "256",
                   type="email"
               }
           })
                <button type="button" id="de-btn-input-field-email" class="btn btn-default">
                    <i class="material-icons" id="de-btn-input-field-icon">build</i>
                </button>
                <div id="erreur-email" style="color:#b94a48;display:none;"></div>
            }
            else
            {
                @Html.DisplayFor(model => model.Item1.Personne.Courriel)
            }
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Item1.Personne.Telephone)
        </dt>

        <dd>
            @if (sachem.Models.SachemIdentite.ObtenirTypeUsager(Session) == sachem.Models.TypeUsagers.Tuteur
                    || sachem.Models.SachemIdentite.ObtenirTypeUsager(Session) == sachem.Models.TypeUsagers.Eleve)
            {

                if (string.IsNullOrEmpty(Model.Item1.Personne.Telephone))
                {
                    @Html.EditorFor(model => model.Item1.Personne.Telephone, new
                    {
                        htmlAttributes = new
                        {
                            @class = "form-control",
                            id = "de-input-field-tel",
                            required = "required",
                            placeholder = "(999) 999-9999",
                            minlength = "10",
                            maxlength = "14",
                            type = "tel",
                            Value = Model.Item1.Personne.Telephone
                        }
                    })
                }
                else
                {
                    @Html.EditorFor(model => model.Item1.Personne.Telephone, new
                    {
                        htmlAttributes = new
                        {
                            @class = "form-control",
                            id = "de-input-field-tel",
                            required = "required",
                            placeholder = "(999) 999-9999",
                            minlength = "10",
                            maxlength = "14",
                            type = "tel",
                            Value = $"{Convert.ToInt64(Model.Item1.Personne.Telephone):(###) ###-####}"
                        }
                    })
                }

                <button type="button" id="de-btn-input-field-tel" class="btn btn-default">
                        <i class="material-icons" id="de-btn-input-field-icon">build</i>
                    </button>
                    <div id="erreur-tel" style="color:#b94a48;display:none;"></div>
            }
            else
            {
                if (!Model.Item1.Personne.Telephone.IsEmpty())
                {
                    @($"{Convert.ToInt64(Model.Item1.Personne.Telephone):(###) ###-####}")
                }
            }
        </dd>
    </dl>

@if (sachem.Models.SachemIdentite.ObtenirTypeUsager(Session) == sachem.Models.TypeUsagers.Eleve || ViewBag.idTypeInsc == 1)
{
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Item1.BonEchange)
        </dt>
@if (sachem.Models.SachemIdentite.TypeListeProf.Contains(sachem.Models.SachemIdentite.ObtenirTypeUsager(Session)))
{
        <dd>
            @Html.CheckBoxFor(model => model.Item1.BonEchange.Value, new { id = "check-bon-echange" })
            @sachem.Models.Messages.BonAchatAchete()
        </dd>
}
else
{
    if (Model.Item1.BonEchange != null && Model.Item1.BonEchange.Value)
    {
        <dd>
            @sachem.Models.Messages.BonAchatAchete()
        </dd>
    }
    else
    {
        <dd>
            @sachem.Models.Messages.BonAchatPasAchete()
        </dd>
    }
}
    </dl>
}
     @if (sachem.Models.SachemIdentite.ObtenirTypeUsager(Session) != sachem.Models.TypeUsagers.Eleve)
     {     <div style="margin-top:10px;">@Html.ActionLink("Retourner à la recherche", "Index", "DossierEtudiant", null)</div> }

    @Html.Partial("_CoursAnterieur", Model.Item2)

    @Html.Partial("_InscriptionSachem", Model.Item3)
</div>
}

<script type="text/javascript">
    $(document).ready(function () {
        $('#de-btn-input-field-tel')
            .click(function() {
                var pers = document.getElementById("hidden-id-pers");
                var tel = document.getElementById("de-input-field-tel");
                var pattern10 = new RegExp(/^\d{10}$/);
                var pattern14 = new RegExp(/^\(?([0-9]{3})\)?[-. ]?([0-9]{3})[-. ]?([0-9]{4})$/);
                if (pattern10.test(tel.value) || pattern14.test(tel.value)) {
                    $.ajax({
                        url: "/DossierEtudiant/ModifTel",
                        data: { "tel": tel.value, "pers": pers.value },
                        type: "POST",
                        success: function() {
                            $('#succes').show();
                            document.getElementById('succes').innerText = @sachem.Models.Messages.TelephoneModifie();
                            $('#erreur-tel').hide();
                        }
                    });
                } else {
                    $('#erreur-tel').show();
                    document.getElementById('erreur-tel').innerText = @sachem.Models.Messages.TelephoneInvalide();
                    $('#succes').hide();
                }
            });
        $('#de-btn-input-field-email')
            .click(function() {
                var pers = document.getElementById("hidden-id-pers");
                var email = document.getElementById("de-input-field-email");
                var pattern = new
                    RegExp(/^(("[\w-\s]+")|([\w-]+(?:\.[\w-]+)*)|("[\w-\s]+")([\w-]+(?:\.[\w-]+)*))(@@((?:[\w-]+\.)*\w[\w-]{0,66})\.([a-z]{2,6}(?:\.[a-z]{2})?)$)|(@@\[?((25[0-5]\.|2[0-4][0-9]\.|1[0-9]{2}\.|[0-9]{1,2}\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\]?$)/i);
                if (pattern.test(email.value)) {
                    $.ajax({
                        url: "/DossierEtudiant/ModifEmail",
                        data: { "email": email.value, "pers": pers.value },
                        type: "POST",
                        success: function() {
                            $('#succes').show();
                            document.getElementById('succes').innerText = @sachem.Models.Messages.CourrielModifie();
                            $('#erreur-email').hide();
                        }
                    });
                } else {
                    $('#erreur-email').show();
                    document.getElementById('erreur-email').innerText = @sachem.Models.Messages.CourrielInvalide();
                    $('#succes').hide();
                }
            });
        $('#check-bon-echange')
            .click(function() {
                var insc = document.getElementById("hidden-id-insc");
                var bon = $(this).prop("checked");
                $.ajax({
                    url: "/DossierEtudiant/ModifBon",
                    data: { "bon": bon, "insc": insc.value },
                    type: "POST",
                    success: function() {
                        $("#succes").show();
                        if (bon === true)
                            document.getElementById('succes').innerText = @sachem.Models.Messages.BonAchatAchete();
                        else
                            document.getElementById('succes').innerText = @sachem.Models.Messages.BonAchatPasAchete();
                    }
                });
            });
    })
</script>