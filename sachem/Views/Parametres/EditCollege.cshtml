@using PagedList.Mvc;
@model PagedList.IPagedList<sachem.Models.p_College>
@{
    ViewBag.Title = "Collèges d'enseignement";
    
}
<h2>@ViewBag.Title</h2>

@Html.ValidationSummary(true, "", new { @class = "text-danger" })
<p class="text-success">
    @Html.ViewBag.Success
    @TempData["Success"]
</p>

@Scripts.Render("~/bundles/jquery")


<script src="~/Scripts/jquery.unobtrusive-ajax.min.js"></script>
<script type="text/javascript">
    function ModifModal(id) {
        var modal = document.getElementById('modalModification');
        var boutonModif = document.getElementById('btnModifier');
        modal.style.display = 'block';
        boutonModif.onclick = function() {
            var nomCollege = document.getElementById("txtNomCollege").value;
            Modifier(id, nomCollege);
        }
    }

    function SuppressionModal(id) {
        var modal = document.getElementById('modalSuppression');
        var boutonSuppression = document.getElementById('btnSuppression');
        modal.style.display = 'block';
        boutonSuppression.onclick = function() {
            Suppression(id);
        }
    }

    function Suppression(id) {
        $.ajax({
            url: "/Parametres/DeleteCollege",
            data: { "id": id },
            type: "POST",
            success: function() {
                window.location.reload(true);
            }
        });
    }

    function Modifier(id, nouveauNomCollege) {
        $.ajax({
            url: "/Parametres/ModifCollege",
            data: { "nomCollege": nouveauNomCollege, "id": id },
            type: "POST",
            success: function(){
                window.location.reload(true);
            }
        });
    }
</script>


<table class="table-condensed">
    @using (Html.BeginForm("EditCollege", "Parametres", FormMethod.Get, new { @class = "form-inline", role = "form" }))
    {
        <tr>
            <td>Nom de collège :</td>
            <td>@Html.Editor("Recherche", new { htmlAttributes = new { @class = "form-control" } })</td>
            <td><input type="submit" value="Rechercher" class="form-search"/></td>
        </tr>
    }
    @using (Ajax.BeginForm("AddCollege", "Parametres", new AjaxOptions { HttpMethod = "Post", OnSuccess = "window.location.reload()", Confirm = "Voulez-vous vraiment ajouter ce collège ?" }))
    {
        <tr>
            <td>Collège :</td>
            <td>@Html.Editor("NomCollege", new { htmlAttributes = new { @class = "form-control" } })</td>
            <td><input type="submit" value="Ajouter" class="form-search" /></td>
        </tr>
    }
</table>

<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.First().id_College)
        </th>
    </tr>
    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.College)
            </td>
            <td>
       
                <a onclick="ModifModal(@item.id_College);" href="#" data-toggle="modal" data-target="#modalModification">Modifier</a>
                |
                <a onclick="SuppressionModal(@item.id_College);" href="#" data-toggle="modal" data-target="#modalSuppression">Supprimer</a>
            </td>    
        </tr>
    }
    
    @if (!Model.Any())
    {
        <tr>
            <td colspan="6">Aucun collège d'enseignement ne répond à ces critères</td>
        </tr>
    }
</table>

<div class="container">
    <div class="modal fade" id="modalModification" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Modification du nom de collège d'enseignement.</h4>
                </div>
                <div class="modal-body">
                    <p>Nouveau nom de collège d'enseignement :</p> <input type="text" id="txtNomCollege" class="form-control" /><br />
                </div>
                <div class="modal-footer">
                    <button id="btnModifier" type="button" data-dismiss="modal" class="btn btn-primary">Modifier</button>
                    <button type="button" data-dismiss="modal" class="btn">Annuler</button>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="container">
    <div class="modal fade" id="modalSuppression" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Suppression d'un collège d'enseignement.</h4>
                </div>
                <div class="modal-body">
                    <p>Voulez-vous vraiment supprimer ce collège d'enseignement ?</p>
                </div>
                <div class="modal-footer">
                    <button id="btnSuppression" type="button" data-dismiss="modal" class="btn btn-primary">Supprimer</button>
                    <button type="button" data-dismiss="modal" class="btn">Annuler</button>
                </div>
            </div>
        </div>
    </div>
</div>



@* Ajout de la fonction PagedList modifier.*@
@if (Model.PageCount > 0)
{
    <div>
        Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) sur @Model.PageCount
        <div>
            @Html.PagedListPager(Model, page => Url.Action("EditCollege", new { page }))
        </div>
    </div>
}